Q1: What is the difference between value types and reference types in .NET?
Answer:

Value types store data directly in the variable's memory location. When assigned, the entire value is copied.
Reference types store a reference (pointer) to the memory location where data is stored. When assigned, only the reference is copied.

Code Example:
```
// Value type example
int a = 10;
int b = a;  // b gets a copy of a's value
a = 20;     // Only a changes, b remains 10

// Reference type example
string[] arr1 = {"hello", "world"};
string[] arr2 = arr1;  // arr2 points to same array as arr1
arr1[0] = "hi";        // Both arr1[0] and arr2[0] are now "hi"
```


Value types: int, double, bool, struct, enum, DateTime
Reference types: string, object, arrays, class, interface, delegate
